<!DOCTYPE web-app PUBLIC
        "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>

    <!--默认第一次请求时才会创建servlet,
    其次是filter,
    然后是监听器Listenr，监听在web程序执行过程中的事件，比如servletContext生命周期
    监听的是某一个动作，通过监听servletContext的生命周期，一旦servletContxt被创建，就
    初始化Spring容器
    -->

    <!--监听器 出现BeanFactory not initialized or already closed表示没有找到Spring的配置文件-->
    <!--在web工程中Spring的配置文件是有默认位置和默认名称的，默认位置在WEB-INF下，默认名称叫applicationContext.xml-->
    <!--【第二顺位】-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--【最先加载】用来设置上下文参数，servletContxt初始化的时候第一个被加载的标签-->
<!--    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>-->

    <!-- 注册中央调度器 -->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- tomcat启动时自动创建servlet，数字越小优先级越高(>0) -->
<!--
        <load-on-startup>1</load-on-startup>
-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--第三顺位是filter-->
    <!--最后是servlet init-param中设置Spirngmvc的配置文件是因为伴随着servlet的加载而加载-->
</web-app>
